#version 330 core

layout (points) in;
layout (triangle_strip, max_vertices = 6) out;

in vec3 g_Color[];
out vec4 f_Color;

void main()
{
    f_Color = vec4(g_Color[0], 1.0);
    vec4 cubeData = gl_in[0].gl_Position;

    vec2 cubePosition = cubeData.xy;
    vec2 cubeSize = vec2(0.2f, 0.2f);
    vec2 offset = 0.5f * cubeSize;

    // top-left triangle
    gl_Position = vec4(cubePosition.x - offset.x, cubePosition.y - offset.y, 0.0f, 1.0f);
    EmitVertex();
    gl_Position = vec4(cubePosition.x - offset.x, cubePosition.y + offset.y, 0.0f, 1.0f);
    EmitVertex();
    gl_Position = vec4(cubePosition.x + offset.x, cubePosition.y + offset.y, 0.0f, 1.0f);
    EmitVertex();
    EndPrimitive();

    // bottom-right triangle
    gl_Position = vec4(cubePosition.x - offset.x, cubePosition.y - offset.y, 0.0f, 1.0f);
    EmitVertex();
    gl_Position = vec4(cubePosition.x + offset.x, cubePosition.y + offset.y, 0.0f, 1.0f);
    EmitVertex();
    gl_Position = vec4(cubePosition.x + offset.x, cubePosition.y - offset.y, 0.0f, 1.0f);
    EmitVertex();
    EndPrimitive();
}
