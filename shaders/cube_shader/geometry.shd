#version 330 core

layout (points) in;
layout (triangle_strip, max_vertices = 6) out;

//flat in vec4 cubeDataInput[];

//uniform vec4 cubeDataUniform;

void main()
{
    //vec4 cubeData = cubeDataUniform;
    //vec4 cubeData = gl_in[0].gl_Position;
    //vec4 cubeData = cubeDataInput[0];
    vec4 cubeData = gl_in[0].gl_Position;

    vec2 cubePosition = cubeData.xy + vec2(0.5f, 0.0f);
    vec2 cubeSize = vec2(0.2f, 0.2f);
    vec2 offset = 0.5f * cubeSize;

    // top-left triangle
    gl_Position = vec4(cubePosition.x - offset.x, cubePosition.y - offset.y, 0.0f, 1.0f);
    EmitVertex();
    gl_Position = vec4(cubePosition.x - offset.x, cubePosition.y + offset.y, 0.0f, 1.0f);
    EmitVertex();
    gl_Position = vec4(cubePosition.x + offset.x, cubePosition.y + offset.y, 0.0f, 1.0f);
    EmitVertex();
    EndPrimitive();

    // bottom-right triangle
    gl_Position = vec4(cubePosition.x - offset.x, cubePosition.y - offset.y, 0.0f, 1.0f);
    EmitVertex();
    gl_Position = vec4(cubePosition.x + offset.x, cubePosition.y + offset.y, 0.0f, 1.0f);
    EmitVertex();
    gl_Position = vec4(cubePosition.x + offset.x, cubePosition.y - offset.y, 0.0f, 1.0f);
    EmitVertex();
    EndPrimitive();
}
